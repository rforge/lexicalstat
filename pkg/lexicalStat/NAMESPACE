## Either
import(Matrix)
### or {for now sufficient}
#importFrom(Matrix
#    ,"sparseMatrix"
#    ,"diag" # <- need (generic, with its methods!)
#    )

import(XML)

# S4 methods to be exported :
#

#
# export: including generics
# exportMethods: for methods on generics defined in other packages, e.g., show, initialize


# functions exported from file "R/corpus.R"
exportMethods(N, V);
exportMethods(types);

# functions exported from file "R/fullText.R"
export(fullText);
export(readTexts);
#export(asFullText, asFullText.tabulated);
export(tokenize, tokenize.treetagger, tokenize.simple);
export(print.tokens.by.parts, untokenize.by.parts);
export(flip.inner.outer.parts, remove.inner.part);
export(get.parts.containing.form, get.parts.containing.all.forms, get.tokens.by.context.by.part);
# get.parts.with.token.fl, 

# functions exported from file "R/lexicalTable.R"
export(lexicalTable);
export(readLexicalTable, writeLexicalTable);

# functions exported from file "R/frequencyList.R"
export(frequencyList, frequencyList.numeric, frequencyList.table, frequencyList.data.frame);

# functions exported from file "R/tabulated.R"
export(tabulated);


# functions exported from file "as.R"
exportMethods(asTabulated);
exportMethods(asFrequencyList);
exportMethods(asLexicalTable);
exportMethods(asFullText);
exportMethods(coerce);

#export(, asTabulated.fullText);
#export(asFrequencyList, asFrequencyList.tabulated, asFrequencyList.fullText);
#export(asLexicalTable, asLexicalTable.fullText);

# functions exported from file "R/subcorpus.R"
exportMethods(subcorpus);

# functions exported from file "R/is.subcorpus.of.R"
exportMethods(is.subcorpus.of);

# functions exported from file "R/conc.R"
exportMethods(kwic);
export(conc, word.conc, text.conc);

# functions exported from file "R/main.R"
export(compare.txts);

# functions exported from file "R/ngram.R"
export(ngram.parts, ngram, ngram.matrix.parts, ngram.matrix);

# functions exported from file "R/tactique.R"
export(get.words.by.slices, remove.inner.part, flip.inner.outer.parts, get.words.by.slices.by.parts, get.sub.corpus.in.tactique, slice.mot.specificities);

# functions exported from file "R/treetagger.R"
export(read.treetagger);

# functions exported from file "R/word.association.*.R"
export(wordAssociation)
exportMethods(wam);
export(wam.num);
export(fisher, specificities, binomial, loglikelihood);
#export(write.mwa, print.mwa, writeAsXML.wma);
#export(wam, wam.fullText, wam.tabulated, wam.frequencyList, wam.lexicalTable, wam.numeric);

#export(extract.field.in.treetagger.struct, remove.unknown.in.treetagger.struct, repair.unknown.in.treetagger.struct, get.treetagger.struct.in.xml.element, characters2treetagger.struct, extract.word.on.pos.in.treetagger.struct);

# functions exported from file "R/textUtils.R"
export(line2paragraph);

# functions exported from file "R/corpus.R"
# export(list2lexical.table, list2lexical.table.sparse, .add.to.lexical.table);

# functions exported from file "R/subcorpus.R"
# export(get.parts.with.token.fl, get.parts.with.token, get.parts.with.tokens);

# functions exported from file "R/read.corpus.R"
# export(read.corpus.txt, read.corpus.txts);

# functions exported from file "R/tokenize.R"
# export(tokenize, tokenize.treetagger, tokenize.simple);

# functions exported from file "R/syntex.R"
# export(seq.apply);

# functions exported from file "R/specificities.R"
# export(specificities, specificities.lexicon, specificities.probabilities, print.specificities, write.specificities, writeAsXML.specificities);

# functions exported from file "R/xml.R"
# export(element.content2list, xml.attr2lexical.table, elementcontent2list.sax, xml.attr2vector);

# functions exported from file "R/sparse.matrix.R"
# export(readSparseMatrix, writeSparseMatrix);

# functions exported from file "R/tokens.by.parts.R"
# export(print.tokens.by.parts, untokenize.by.parts);

